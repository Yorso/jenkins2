<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.jorge</groupId>
	<artifactId>jenkins2</artifactId>
	<packaging>war</packaging>
	<version>11.0.2-SNAPSHOT</version>
	<name>jenkins2</name>
	<description>Jenkins testing</description>

	<properties>
		<java.version>1.8</java.version>
		<spring.version>4.3.0.RELEASE</spring.version>
		<javax.servlet.version>3.1.0</javax.servlet.version>
		<jstl.version>1.2</jstl.version>
		<!-- junit.version>4.10</junit.version -->
		<junit.version>4.12-beta-1</junit.version>
		<testng.version>6.8</testng.version>
		<selenium.server.version>3.0.1</selenium.server.version>
		<selenium.java.client.driver>1.0.1</selenium.java.client.driver>
		<webdrivermanager.version>1.5.0</webdrivermanager.version>
		<spring.test.version>4.1.1.RELEASE</spring.test.version>
		<hamcrest.version>1.3</hamcrest.version>
		<mysql.version>5.1.35</mysql.version>
		<mongodb.version>2.13.0</mongodb.version>
		<groovy.version>2.4.1</groovy.version>
		<gmongo.version>1.3</gmongo.version>
		<maven.compiler.version>3.6.0</maven.compiler.version>
		<maven.surefire.version>2.19.1</maven.surefire.version>
		<maven.war.version>2.6</maven.war.version>
		<sql.maven.version>1.5</sql.maven.version>
		<cargo.port>8097</cargo.port>
		<db.user>user1</db.user>
		<db.password>user1pass</db.password>
		<gmaven.version>1.5</gmaven.version>
		<selenium.maven.version>2.3</selenium.maven.version>
		<cargo.maven2.version>1.6.1</cargo.maven2.version>
		
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<suiteXmlFile>testng.xml</suiteXmlFile>
		
	</properties>
	
	<!-- ConfiguraciÃ³n del repositorio -->
	<scm>
	    <connection>scm:git:https://github.com/Yorso/jenkins2.git</connection>
	    <developerConnection>scm:git:https://github.com/Yorso/jenkins2.git</developerConnection>
	    <url>http://github.com/Yorso/jenkins2</url>
	    <tag>HEAD</tag>
  	</scm>
	
	
	<distributionManagement>
	    <repository>
			<id>releases</id>
			<name>Releases</name>
			<url>http://master:8081/nexus/content/repositories/releases</url>
	    </repository>

	    <snapshotRepository>
			<id>snapshots</id>
			<name>Snapshots</name>
			<url>http://master:8081/nexus/content/repositories/snapshots</url>
	    </snapshotRepository>
	</distributionManagement>

	<dependencies>
		<!-- Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax.servlet.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Spring Core -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Spring MVC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- JSTL -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>

		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- TestNG Maven dependency -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Selenium -->
		<dependency>
	        <groupId>org.seleniumhq.selenium</groupId>
	        <artifactId>selenium-server</artifactId>
	        <version>${selenium.server.version}</version>
	        <scope>test</scope>
	    </dependency>
	    <dependency>
		    <groupId>org.seleniumhq.selenium.client-drivers</groupId>
		    <artifactId>selenium-java-client-driver</artifactId>
		    <version>${selenium.java.client.driver}</version>
		    <scope>test</scope>
		</dependency>
		<!-- dependency>
		    <groupId>org.seleniumhq.selenium</groupId>
		    <artifactId>selenium-java</artifactId>
		    <version>${selenium.server.version}</version>
		    <scope>test</scope>
		</dependency--> 
		<dependency>
		   <groupId>io.github.bonigarcia</groupId>
		   <artifactId>webdrivermanager</artifactId>
		   <version>${webdrivermanager.version}</version>
		   <scope>test</scope>
		</dependency>
				
		<!-- spring-test Maven dependency for testing a method using the Spring's application context with JUnit 4 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.test.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Necessary for unit testing controller methods -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Spring JDBC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- MySQL DataBase Connector -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>

		<!-- MongoDB -->
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongodb.version}</version>
		</dependency>

		<!-- Gmongo -->
		<dependency>
			<groupId>com.gmongo</groupId>
			<artifactId>gmongo</artifactId>
			<version>${gmongo.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Groovy -->
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-ant</artifactId>
			<version>${groovy.version}</version>
			<!-- scope>compile</scope -->
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-test</artifactId>
			<version>${groovy.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy</artifactId>
			<version>${groovy.version}</version>
			<!-- scope>compile</scope -->
			<scope>test</scope>
		</dependency>

	</dependencies>
	
	<build>
		<!-- Maven properties to get in Java project name and embedded container port -->
		<testResources>
	        <testResource>
	            <directory>src/test/resources</directory>
	            <filtering>true</filtering>
	        </testResource>
	    </testResources>

		<plugins>
		
			<!-- Compiler and Surefire seem necessary for Selenium -->
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-compiler-plugin</artifactId>
			    <version>${maven.compiler.version}</version>
			    <configuration>
                  <source>${java.version}</source>
                  <target>${java.version}</target>
              </configuration>
			</plugin>
			
			<!-- plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-surefire-plugin</artifactId>
			    <version>2.19.1</version>
			    <configuration>
			    	<suiteXmlFiles>
			    		<suiteXmlFile>${suiteXmlFile}</suiteXmlFile>
			    	</suiteXmlFiles>
			    </configuration>
			</plugin-->
			
			<!-- Executing all integration class ending in IT -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.version}</version>
				<executions>
					<execution>
						<id>Running integration tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<excludes>
								<exclude>none</exclude>
							</excludes>
							<includes>
								<include>**/integration/*IT.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
				<!-- configuration>
					<parallel>methods</parallel>
	   				<threadCount>4</threadCount>
	   				<configuration>
					<excludes>
						<exclude>target/surefire-reports/*.*</exclude>
					</excludes>
				</configuration>
				</configuration-->
				<!-- configuration>
			    	<suiteXmlFiles>
			    		<suiteXmlFile>${suiteXmlFile}</suiteXmlFile>
			    	</suiteXmlFiles>
			    </configuration-->
				<!-- configuration>
					<excludes>
						<exclude>**/integration/*IT.java</exclude>
					</excludes>
				</configuration-->
			</plugin>
        
			<!-- Start Jetty server -->
	        <plugin>
	            <groupId>org.codehaus.cargo</groupId>
	            <artifactId>cargo-maven2-plugin</artifactId>
	            <version>${cargo.maven2.version}</version>
	            <executions>
	                <execution>
	                    <id>start-container</id>
	                    <phase>pre-integration-test</phase>
	                    <goals>
	                        <goal>start</goal>
	                        <!-- If uncomment this line, an error occurs when executing integration test if we are using embedded container -->
	                        <!-- goal>deploy</goal-->
	                    </goals>
	                </execution>
	                <execution>
	                    <id>stop-container</id>
	                    <phase>post-integration-test</phase>
	                    <goals>
	                        <goal>stop</goal>
	                    </goals>
	                </execution>
	            </executions>
	            <configuration>
	            	<wait>false</wait>
	            	<configuration>
		                <properties>
		                	<!-- Setting container port -->
							<cargo.servlet.port>${cargo.port}</cargo.servlet.port>
		                </properties>
	                </configuration>
	                <container>
	                	<containerId>jetty9x</containerId>
	            		<type>embedded</type>
	                    <!-- containerId>tomcat8x</containerId>
	                    <type>installed</type>
	                    <home>/home/jorge/tomcat8</home-->
	                </container>
	            </configuration>
	        </plugin>
				
			<!-- Start the Selenium server -->
	        <plugin>
	            <groupId>org.codehaus.mojo</groupId>
	            <artifactId>selenium-maven-plugin</artifactId>
	            <version>${selenium.maven.version}</version>
	            <executions>
	                <execution>
	                    <id>start</id>
	                    <phase>pre-integration-test</phase>
	                    <goals>
	                        <goal>start-server</goal>
	                    </goals>
	                    <configuration>
	                        <background>true</background>
	                        <logOutput>true</logOutput>
	                    </configuration>
	                </execution>
	                <execution>
	                    <id>stop</id>
	                    <phase>post-integration-test</phase>
	                    <goals>
	                        <goal>stop-server</goal>
	                    </goals>
	                </execution>
	            </executions>
	        </plugin>
				
            <!-- Create war files -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven.war.version}</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			
			<!-- MySQL -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>${sql.maven.version}</version>

				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>${mysql.version}</version>
					</dependency>
				</dependencies>

				<!-- General configuration for all executes below -->
				<configuration>
					<driver>com.mysql.jdbc.Driver</driver>
					<!-- URL without db name because if this db doesn't exist and we try 
						to drop it or create it, it will give us an error thought we have 'onError 
						continue' in general configuration and 'IF EXISTS' in 'sqlCommand'. They 
						don't work and give us an error -->
					<url>jdbc:mysql://localhost:3306?useUnicode=true&amp;characterEncoding=UTF-8</url>
					<username>${db.user}</username>
					<password>${db.password}</password>
					<autocommit>true</autocommit>
					<onError>continue</onError>
				</configuration>

				<executions>
					<execution>
						<id>drop-schema</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<!-- Local configuration for only this execution -->
						<configuration>
							<!-- We can use sql command in pom... -->
							<sqlCommand>DROP SCHEMA IF EXISTS `jenkins_test_db`;</sqlCommand>
						</configuration>
					</execution>

					<execution>
						<id>create-blank-schema</id>
						<phase>integration-test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<!-- ... or make a reference to a sql file in project -->
							<srcFiles>
								<srcFile>src/test/resources/sql/create_schema.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>

					<execution>
						<id>create-user-table</id>
						<phase>integration-test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<srcFiles>
								<srcFile>src/test/resources/sql/create_user_table.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>

					<execution>
						<id>insert-data</id>
						<phase>integration-test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<srcFiles>
								<srcFile>src/test/resources/sql/insert_data.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- MongoDB and Groovy -->
			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<version>${gmaven.version}</version>

				<executions>
					<execution>
						<id>run-mongo-tests</id>
						<goals>
							<goal>execute</goal>
						</goals>
						<phase>integration-test</phase>
					</execution>
				</executions>

				<configuration>
					<providerSelection>1.8</providerSelection>
					<source>${basedir}/src/test/resources/nosql/mongodb_test.groovy</source>
				</configuration>
			</plugin>
			
		</plugins>
		
	</build>
	
</project>