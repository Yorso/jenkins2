<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.jorge</groupId>
	<artifactId>jenkins2</artifactId>
	<version>3.0.2-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>jenkins2</name>
	<description>Jenkins testing</description>

	<properties>
		<java.version>1.8</java.version>
		<spring.version>4.3.0.RELEASE</spring.version>
		<db.user>user1</db.user>
		<db.password>user1pass</db.password>
		<gmaven.version>1.5</gmaven.version>
		<maven.war.version>2.6</maven.war.version>
		<cargo.maven.version>1.4.2</cargo.maven.version>
		<mysql.version>5.1.35</mysql.version>
		<mongodb.version>2.13.0</mongodb.version>
		<javax.servlet.version>3.1.0</javax.servlet.version>
		<junit.version>4.10</junit.version>
		<hamcrest.version>1.3</hamcrest.version>
		<sql.maven.version>1.5</sql.maven.version>
		<spring.test.version>4.1.1.RELEASE</spring.test.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jetty.version>6.1.25</jetty.version>
		<jstl.version>1.2</jstl.version>
		<groovy.version>2.4.1</groovy.version>
		<gmongo.version>1.3</gmongo.version>
		<maven.compiler.plugin.version>3.0</maven.compiler.plugin.version>
	</properties>
	
	<!-- ConfiguraciÃ³n del repositorio -->
	<scm>
	    <connection>scm:git:https://github.com/Yorso/jenkins2.git</connection>
	    <developerConnection>scm:git:https://github.com/Yorso/jenkins2.git</developerConnection>
	    <url>http://github.com/Yorso/jenkins2</url>
	    <!-- tag>jenkins2-2.0.7</tag -->
  	</scm>
	
	<distributionManagement>
	    <!-- repository>
	      <uniqueVersion>false</uniqueVersion>
	      <id>nexus</id>
	      <name>Corporate Repository</name>
	      <url>http://master:8081/nexus/content/repositories/releases</url -->
	      <!-- layout>default</layout -->
	    <!-- /repository -->
		
	    <repository>
	      <id>nexus-releases</id>
	      <url>http://master:8081/nexus/content/repositories/releases</url>
	    </repository>
		
	    <snapshotRepository>
	      <id>nexus-snapshots</id>
	      <url>http://master:8081/nexus/content/repositories/snapshots</url>
	   </snapshotRepository>
		
	    <!-- snapshotRepository>
	      <uniqueVersion>true</uniqueVersion>
	      <id>nexus</id>
	      <name>Propellors Snapshots</name>
	      <url>http://master:8081/nexus/content/repositories/snapshots</url -->
	      <!-- layout>legacy</layout -->
	    <!-- /snapshotRepository -->
	</distributionManagement>

	<!--distributionManagement>
    <repository>
      <id>nexus</id>
      <name>Nexus Releases</name>
      <url>http://master:8081/nexus/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <id>nexus</id>
      <name>Nexus Snapshot</name>
      <url>http://master:8081/nexus/content/repositories/snapshots</url>
    </snapshotRepository-->
    <!--site>
      <id>nexus-site</id>
      <name>Nexus Site</name>
      <url>dav:http://master:8081/nexus/content/repositories/site/</url>
    </site-->
  <!-- /distributionManagement -->

	<dependencies>
		<!-- Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax.servlet.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Spring Core -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Spring MVC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- JSTL -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>

		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- spring-test Maven dependency for testing a method using the Spring's 
			application context with JUnit 4 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.test.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Necessary for unit testing controller methods -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Spring JDBC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- MySQL DataBase Connector -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>

		<!-- MongoDB -->
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongodb.version}</version>
		</dependency>

		<!-- Jetty -->
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
			<version>${jetty.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Gmongo -->
		<dependency>
			<groupId>com.gmongo</groupId>
			<artifactId>gmongo</artifactId>
			<version>${gmongo.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Groovy -->
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-ant</artifactId>
			<version>${groovy.version}</version>
			<!-- scope>compile</scope -->
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-test</artifactId>
			<version>${groovy.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy</artifactId>
			<version>${groovy.version}</version>
			<!-- scope>compile</scope -->
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<profiles>
	    <profile>
	      <id>releases</id>
	      <build>
		 <plugins>
		    <plugin>
		       <groupId>org.sonatype.plugins</groupId>
		       <artifactId>nexus-staging-maven-plugin</artifactId>
		       <version>1.5.1</version>
		       <executions>
			  <execution>
			     <id>default-deploy</id>
			     <phase>deploy</phase>
			     <goals>
				<goal>deploy</goal>
			     </goals>
			  </execution>
		       </executions>
		       <configuration>
			  <serverId>nexus-releases</serverId>
			  <nexusUrl>http://master:8081/nexus/</nexusUrl>
			  <skipStaging>true</skipStaging>
		       </configuration>
		    </plugin>
		 </plugins>
	      </build>
	    </profile>
	</profiles>
	
	<build>
		<plugins>
			
			<!-- plugin>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.4</version>
				<dependencies>
				  <dependency>
				    <groupId>org.apache.maven.wagon</groupId>
				    <artifactId>wagon-webdav-jackrabbit</artifactId>
				    <version>2.8</version>
				  </dependency>
				</dependencies>
				<configuration>
				  <locales>en,es</locales>
				</configuration>
			</plugin -->
			
			<plugin>
			   <groupId>org.apache.maven.plugins</groupId>
			   <artifactId>maven-deploy-plugin</artifactId>
			   <version>2.8.1</version>
			   <configuration>
			      <skip>true</skip>
			   </configuration>
			</plugin>
			
			<plugin>
			   <groupId>org.apache.maven.plugins</groupId>
			   <artifactId>maven-release-plugin</artifactId>
			   <version>2.4.2</version>
			   <configuration>
			      <tagNameFormat>v@{project.version}</tagNameFormat>
			      <autoVersionSubmodules>true</autoVersionSubmodules>
			      <releaseProfiles>releases</releaseProfiles>
			   </configuration>
			</plugin>
			
			<!-- plugin>
			   <groupId>org.sonatype.plugins</groupId>
			   <artifactId>nexus-staging-maven-plugin</artifactId>
			   <version>1.5.1</version>
			   <executions>
			      <execution>
				 <id>default-deploy</id>
				 <phase>deploy</phase>
				 <goals>
				    <goal>deploy</goal>
				 </goals>
			      </execution>
			   </executions>
			   <configuration>
			      <serverId>nexus</serverId>
			      <nexusUrl>http://master:8081/nexus/</nexusUrl>
			      <skipStaging>true</skipStaging>
			   </configuration>
			</plugin -->
			
			<!-- plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.4.1</version>
				<executions>
				  <execution>
				    <id>enforce-maven</id>
				    <goals>
				      <goal>enforce</goal>
				    </goals>
				    <configuration>
				      <rules>
					<requireMavenVersion>
					  <version>3.0</version>
					</requireMavenVersion>
				      </rules>    
				    </configuration>
				  </execution>
				</executions>
			</plugin -->
		            
            
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven.war.version}</version>

				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<!-- Jetty -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>${cargo.maven.version}</version>

				<executions>
					<execution>
						<id>start-container</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<wait>false</wait>
						</configuration>
					</execution>

					<execution>
						<id>stop-container</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<container>
						<timeout>2980000</timeout>
						<containerId>jetty7x</containerId>
						<type>embedded</type>
						<dependencies>
							<dependency>
								<location>${basedir}/target/test-classes/</location>
							</dependency>
						</dependencies>
					</container>

					<configuration>
						<properties>
							<!-- Changing Jetty port to avoid problems with other servers -->
							<cargo.servlet.port>8181</cargo.servlet.port>
							<cargo.logging>medium</cargo.logging>
						</properties>
					</configuration>

					<deployables>
						<deployable>
							<groupId>com.jorge</groupId>
							<artifactId>jenkins2</artifactId>
							<type>war</type>
							<properties>
								<context>/jenkins2</context>
							</properties>
						</deployable>
					</deployables>
				</configuration>
			</plugin>
			
			<!-- MySQL -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>${sql.maven.version}</version>

				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>${mysql.version}</version>
					</dependency>
				</dependencies>

				<!-- General configuration for all executes below -->
				<configuration>
					<driver>com.mysql.jdbc.Driver</driver>
					<!-- URL without db name because if this db doesn't exist and we try 
						to drop it or create it, it will give us an error thought we have 'onError 
						continue' in general configuration and 'IF EXISTS' in 'sqlCommand'. They 
						don't work and give us an error -->
					<url>jdbc:mysql://localhost:3306?useUnicode=true&amp;characterEncoding=UTF-8</url>
					<username>${db.user}</username>
					<password>${db.password}</password>
					<autocommit>true</autocommit>
					<onError>continue</onError>
				</configuration>

				<executions>
					<execution>
						<id>drop-schema</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<!-- Local configuration for only this execution -->
						<configuration>
							<!-- We can use sql command in pom... -->
							<sqlCommand>DROP SCHEMA IF EXISTS `jenkins_test_db`;</sqlCommand>
						</configuration>
					</execution>

					<execution>
						<id>create-blank-schema</id>
						<phase>integration-test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<!-- ... or make a reference to a sql file in project -->
							<srcFiles>
								<srcFile>src/test/resources/sql/create_schema.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>

					<execution>
						<id>create-user-table</id>
						<phase>integration-test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<srcFiles>
								<srcFile>src/test/resources/sql/create_user_table.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>

					<execution>
						<id>insert-data</id>
						<phase>integration-test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<srcFiles>
								<srcFile>src/test/resources/sql/insert_data.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- MongoDB and Groovy -->
			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<version>${gmaven.version}</version>

				<executions>
					<execution>
						<id>run-mongo-tests</id>
						<goals>
							<goal>execute</goal>
						</goals>
						<phase>integration-test</phase>
					</execution>
				</executions>

				<configuration>
					<providerSelection>1.8</providerSelection>
					<source>${basedir}/src/test/resources/nosql/mongodb_test.groovy</source>
				</configuration>
			</plugin>

			
		</plugins>
	</build>
</project>
